<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mycompany.miniproject.dao.ProductReviewDAO">


    <!-- 후기 insert -->
    <insert id="insertReviewPost" parameterType="ProductReview">
        <![CDATA[
        INSERT INTO PRODUCT_REVIEW (
        	product_review_id,
            review_title,
            review_content,
            review_point,
            review_views,
            review_date,
            member_id,
            product_id
          
            
        ) VALUES (
        	seq_product_review_id.nextval,
            #{reviewTitle},
            #{reviewContent},
            #{reviewPoint},
            0,
            sysdate,
            #{memberId},
            #{productId}
          
        )
        ]]>
    </insert>
    
    <!-- 각 상품의 최신 후기글 가져오기 -->
   <select id="getRecentReviewId" parameterType="int" resultType="int">
		<![CDATA[
			SELECT product_review_id
			FROM PRODUCT_REVIEW
			WHERE product_id = #{productId}
			ORDER BY review_date DESC
			FETCH FIRST 1 ROWS ONLY
		]]>
	</select>
    
    <select id="selectReviewSingleRow" parameterType="int" resultType="ProductReview">
		<![CDATA[
			SELECT 
				product_review_id,
				review_title,
				review_date,
				review_content,
				review_views,
				member_id
			FROM PRODUCT_REVIEW
			WHERE product_review_id = #{boardNum}
		]]>
	</select>
	
	<select id="selectReviewAllCount" resultType="int" >
		<![CDATA[
			SELECT COUNT(*)
			FROM PRODUCT_REVIEW
		]]>
	</select>
	
	<select id="selectReviewList" parameterType="Pager" resultType="ProductReview">
		<![CDATA[
			SELECT
				product_review_id,
				review_title,
				review_date,
				review_content,
				review_point,
				review_views,
				member_id,
				product_id
			FROM
				(SELECT
					rownum as rnum,
					product_review_id,
					review_title,
					review_date,
					review_content,
					review_views,
					member_id
					product_id
				FROM 
					(SELECT
						 product_review_id,
						 review_title,
						 review_date,
						 review_content,
						 review_views,
						 member_id
						 product_id
					 FROM PRODUCT_REVIEW
					 ORDER BY product_review_id DESC)
				WHERE rownum <= #{endRowNo})
			WHERE rnum >= #{startRowNo}
		]]>
	</select>

   <!-- 특정 상품의 리뷰리스트 조회-->
   <!--  <select id="getReviewsByProductId" parameterType="int" resultType="ProductReview">
    	<![CDATA[
        SELECT 
	        PRODUCT_REVIEW_ID, 
	        REVIEW_TITLE, 
	        REVIEW_CONTENT, 
	        REVIEW_POINT, 
	        REVIEW_VIEWS, 
	        REVIEW_DATE, 
	        MEMBER_ID,
            product_id
        FROM 
        	PRODUCT_REVIEW
        
        WHERE 
        	PRODUCT_ID = #{productId}
       	ORDER BY
       		review_date desc
       	]]>
    </select>
   
    <select id="selectReviewsByMemberId" resultType="ProductReview">
    	
    SELECT * 
    FROM product_review 
    WHERE member_id = #{memberId}
	</select>
	-->
	<update id="updateReview" parameterType="ProductReview">
		<![CDATA[
			UPDATE Product_Review
			SET
				review_title = #{reviewTitle},
				review_content = #{reviewContent},
				review_date = #{reviewDate}
				
			WHERE product_review_id = #{productReviewId}
		]]>
	</update>
      
    <update id="updateReviewViews" parameterType="int">
		<![CDATA[
			UPDATE Product_Review
			SET review_views = review_views+1
			WHERE product_review_id = #{productReviewId}
		]]>
	</update>
	<!--  
	<delete id="deleteProductReview" parameterType="int">
		<![CDATA[
			DELETE FROM PRODUCT_REVIEW
			WHERE product_review_id = #{productReviewId}
		]]>
	</delete> -->

</mapper>