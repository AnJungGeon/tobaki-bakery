<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- 시큐리티가 적용되지 않는 요청 경로 설정 -->
	<security:http pattern="/resources/**" security="none"/>

	<security:http>
	
		<security:form-login
			login-page="/member/loginForm"
			username-parameter="memberId"
			password-parameter="memberPassword"
			login-processing-url="/login"
			authentication-success-handler-ref="authenticationSuccessHandler"
			authentication-failure-handler-ref="authenticationFailureHandler"
		/>
		
		<!-- 로그아웃 설정 -->
		<security:logout 
			logout-url="/logout"
			success-handler-ref="logoutSuccessHandler"/>

		<security:csrf disabled="true"/>
		<security:intercept-url pattern="/**" access="permitAll" />

	</security:http>
	
	
	<!-- @Secured를 사용하기 위한 설정 -->
	
	<security:global-method-security secured-annotations="enabled"/>
	
	<bean id="authenticationSuccessHandler"
		class="com.mycompany.miniproject.security.AuthenticationSuccessHandler"/>
		
	<bean id="authenticationFailureHandler"
		class="com.mycompany.miniproject.security.AuthenticationFailureHandler"/>
	
	<bean id="logoutSuccessHandler"
		class="com.mycompany.miniproject.security.LogoutSuccessHandler"/>
		
	<bean id="userDetailService"	
			class="com.mycompany.miniproject.security.UserDetailService"/>
		
		
	<security:authentication-manager>
		<security:authentication-provider ref="daoAuthenticationProvider"/>
	</security:authentication-manager>
	
	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailService"/>
		<property name="authoritiesMapper" ref="roleHierarchyAuthoritiesMapper"/>
	</bean>
	
	<bean id="roleHierarchyAuthoritiesMapper"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
		<constructor-arg ref="roleHierarchyImpl"/>
	</bean>
		
		
	<bean id="roleHierarchyImpl"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ROLE_ADMIN > ROLE_USER
			</value>
		</property>
	</bean>	
	
	
</beans>
